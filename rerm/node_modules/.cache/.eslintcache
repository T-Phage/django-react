[{"/home/sammy/projects/jwtenv/howprofile/rerm/src/index.js":"1","/home/sammy/projects/jwtenv/howprofile/rerm/src/reportWebVitals.js":"2","/home/sammy/projects/jwtenv/howprofile/rerm/src/App.js":"3","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Login.js":"4","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Signup.js":"5","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Createaccount.js":"6","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/createimage.js":"7","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/SaveImage.js":"8","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/OkSignup.js":"9","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Profile.js":"10","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Modal.js":"11","/home/sammy/projects/jwtenv/howprofile/rerm/src/Mainapp.js":"12","/home/sammy/projects/jwtenv/howprofile/rerm/src/Accounts.js":"13","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/SuccessModal.js":"14"},{"size":867,"mtime":1625856404276,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1625471037629,"results":"17","hashOfConfig":"16"},{"size":1537,"mtime":1625872286312,"results":"18","hashOfConfig":"16"},{"size":5661,"mtime":1625882718213,"results":"19","hashOfConfig":"16"},{"size":6566,"mtime":1625590348596,"results":"20","hashOfConfig":"16"},{"size":2822,"mtime":1625676563776,"results":"21","hashOfConfig":"16"},{"size":2556,"mtime":1625683303072,"results":"22","hashOfConfig":"16"},{"size":3264,"mtime":1625683125332,"results":"23","hashOfConfig":"16"},{"size":7285,"mtime":1625882619934,"results":"24","hashOfConfig":"16"},{"size":3496,"mtime":1625872744536,"results":"25","hashOfConfig":"16"},{"size":574,"mtime":1625781208099,"results":"26","hashOfConfig":"16"},{"size":9320,"mtime":1625882808581,"results":"27","hashOfConfig":"16"},{"size":1423,"mtime":1625856202604,"results":"28","hashOfConfig":"16"},{"size":511,"mtime":1625781276979,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"82b5vg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/sammy/projects/jwtenv/howprofile/rerm/src/index.js",[],["67","68"],"/home/sammy/projects/jwtenv/howprofile/rerm/src/reportWebVitals.js",[],"/home/sammy/projects/jwtenv/howprofile/rerm/src/App.js",["69"],"import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './index.css'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Mainapp from './Mainapp';\nimport Accounts from './Accounts';\n\nclass App extends React.Component {\n\n  render() {\n    return (<Router>\n      {/* <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to={\"/sign-in\"}>positronX.io</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div> */}\n \n      <div> {/* className=\"auth-wrapper\"> */}\n        <div> {/* className=\"auth-inner\"> */}\n          <Switch>\n            <Route exact path='/dash' component={Mainapp}></Route>\n            <Route path=\"/\" component={Accounts} />\n            {/* <Route path=\"/sign-up\" component={SignUp} /> */}\n            {/* <Route path=\"/dash/profile\" component={Profile} /> */}\n          </Switch>\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Login.js",["70"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from './Modal';\nimport Success from './SuccessModal'\n\nexport default class Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            longindetails: {username: \"\", password: \"\"},\n            show:false,\n            success:false\n        };\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlesignout = this.handlesignout.bind(this);\n    }\n\n    componentDidMount(){\n        this.handlesignout()\n    }\n\n    showSuccess = () => {\n        this.setState({\n            ...this.state.success,\n            success: true\n        })\n    }\n\n    showModal = () => {\n        this.setState({\n            ...this.state.show,\n            show: true\n        })\n    }\n\n    hideModal = () => {\n        this.setState({\n            ...this.state.show,\n            show: false\n        })\n    }\n\n    handleChange(event) {\n        this.setState({\n            longindetails:{\n                ...this.state.longindetails,\n                [event.target.name]: event.target.value}\n        });\n        // console.log(this.state.longindetails)\n    }\n\n    handleSubmit(event) {\n        // alert('A username and password was submitted: ' + this.state.username + \" \" + this.state.password);\n        event.preventDefault();\n        fetch('https://testingmyapis.herokuapp.com/api/token/obtain/', {\n            method : 'POST',\n            mode : 'cors',\n            cache : 'no-cache',\n            credentials : 'omit',\n            headers: {\n                // 'Content-Type' : 'application/x-www-form-urlencoded'\n                'Content-Type': 'application/json',\n                'accept': 'application/json',               \n            }, \n            body: JSON.stringify(this.state.longindetails)\n        })\n        .then(response => response.json())\n        .then(data => {\n            // console.log('Data :', data)\n            \n            if (data.access){\n                localStorage.setItem('access_token', data.access)\n                localStorage.setItem('refresh_token', data.refresh)\n                this.showSuccess()\n                \n            }\n            else if(data.detail){\n                // 'No active account found with the given credentials'\n                // console.log('not valid')\n                localStorage.setItem('access_token', '')\n                localStorage.setItem('refresh_token', '')\n                this.showModal()\n            } \n        })\n        .catch((error) => {\n            // console.log(error)\n        })\n    }\n\n    handlesignout(){\n        // e.preventDefault()\n        fetch('https://testingmyapis.herokuapp.com/api/user/logout/', {\n            method : 'POST',\n            mode : 'cors',\n            cache : 'no-cache',\n            credentials : 'omit',\n            headers: {\n                // 'Content-Type' : 'application/x-www-form-urlencoded'\n                'Content-Type': 'application/json',\n                'accept': 'application/json',\n                'Authorization': 'JWT ' + localStorage.getItem('access_token'),       \n            }, \n            body: JSON.stringify({'refresh':localStorage.getItem('refresh_token')})\n        })\n        .then(response => response.json())\n        .then(data => {\n            // console.log('Data :', data) \n            localStorage.setItem('access_token', '')\n            localStorage.setItem('refresh_token', '')\n        })\n    }\n\n    render() {\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <h3>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"text\" name=\"username\" value={this.state.longindetails.username} onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter username\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" value={this.state.longindetails.password} onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"#\">password?</a>\n                </p>\n                <p className=\"create-account text-right\">\n                    Click to <Link to={\"/sign-up\"}>Create an Account</Link>\n                </p>\n                 <Modal show={this.state.show} handleClose={this.hideModal}>\n                    <p>Modal</p>\n                    No active account found with the given credentials\n\n                    <button type=\"button\" className=\"btn btn-danger btn-block\" onClick={this.hideModal}>\n                    Retry\n                    </button>\n                    {/* <Link to={\"/sign-in\"}>Retry</Link> */}\n                </Modal>\n                <Success show={this.state.success} >\n                    Successfully logged in\n                    <br />\n                    <a href=\"/dash\">Ok</a>\n                </Success>\n            </form>\n        )\n    }\n}\n","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Signup.js",["71"],"/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Createaccount.js",[],["72","73"],"/home/sammy/projects/jwtenv/howprofile/rerm/src/components/createimage.js",[],"/home/sammy/projects/jwtenv/howprofile/rerm/src/components/SaveImage.js",["74"],"import React from 'react';\nimport axios from 'axios';\n\nexport default class SaveImage extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n             title: '',\n            content: '',\n            image: null\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleImageChange = this.handleImageChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    };\n\n    handleImageChange = (e) => {\n        this.setState({\n            image: e.target.files[0]\n            // image: e.target.value\n        })\n        console.log(e.target.files)\n    };\n\n    handleSubmit(e){\n        e.preventDefault();\n        console.log(this.state);\n        var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n        let form_data = new FormData();\n        form_data.append('image', this.state.image, this.state.image.name);\n        form_data.append('title', this.state.title);\n        form_data.append('content', this.state.content);\n\n    // form_data.append('method', 'POST')\n        console.log(form_data)\n        let url = 'http://localhost:8000/post/';\n        axios.post(url, form_data, {\n            headers: {\n            'content-type': 'multipart/form-data',\n            'accept': 'application/json',\n            }\n        })\n            .then(res => {\n                console.log(res.data);\n            })\n            .catch(err => console.log(\"ERROR :\", err))\n        \n        // fetch(\"http://localhost:8000/post/\", form_data, {\n        //     method : 'POST',\n        //     // mode : 'cors',\n        //     headers: {\n        //         'content-type': 'multipart/form-data;boundary=63c5979328c44e2c869349443a94200e',\n        //         // 'Content-type': 'application/json',\n        //         'accept': 'application/json',       \n        //     }, \n\n        //     // body: JSON.stringify({\n        //     //     'image' : this.state.image, //this.state.image.name,\n        //     //     'title' : this.state.title,\n        //     //     'content' : this.state.content,\n        //     // })\n        // })\n        // .then(res => {\n        //     res.json()\n        //     console.log(res)\n            \n        // })\n        // .catch(e => {\n        //     console.log(e)\n        // })\n    }\n\n    render(){\n        return(\n            <div className=\"App\">\n                <form method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n                <p>\n                    <input type=\"text\" placeholder='Title' id='title' value={this.state.title} onChange={this.handleChange} required/>\n                </p>\n                <p>\n                    <input type=\"text\" placeholder='Content' id='content' value={this.state.content} onChange={this.handleChange} required/>\n                </p>\n                <p>\n                    <input type=\"file\"\n                        id=\"image\"\n                        accept=\"image/png, image/jpeg\"  onChange={this.handleImageChange} required/>\n                </p>\n                <input type=\"submit\"/>\n                </form>\n            </div>\n        )\n    }\n}","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/OkSignup.js",["75","76","77"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport Modal from './Modal';\n\n\nexport default class Signup extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            show: false,\n            dept:[],\n            user: {\n                email : \"\",\n                username : \"\",\n                firstname : \"\",\n                surname : \"\",\n                othername : \"\",\n                department : null,\n                password : \"\",\n                gender : \"\",\n                image: null,\n            }\n        };\n        \n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFileInput = this.handleFileInput.bind(this);\n        this.alldepartments = this.alldepartments.bind(this);\n        \n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n    }\n    \n    componentDidMount(){\n        this.alldepartments()\n    }\n\n    showModal = () => {\n        this.setState({\n            ...this.state.show,\n            show: true\n        })\n    }\n\n    hideModal = () => {\n        this.setState({\n            ...this.state.show,\n            show: false\n        })\n    }\n\n    alldepartments(){\n        var dept = []\n        fetch('https://testingmyapis.herokuapp.com/api/departments/')\n        .then(response => response.json())\n        .then(data => {\n            // console.log(data)\n            this.setState({\n                dept:data\n            })\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            user:{\n                ...this.state.user,\n                [event.target.name]: event.target.value\n            }\n        });\n        // console.log(this.state.user)\n    }\n    handleFileInput(e){\n    //    console.log(e) \n       \n       this.setState({\n           user:{\n            ...this.state.user,   \n            [e.target.name]: e.target.value\n           }\n        });\n    }\n    \n    handleSubmit(e){\n        e.preventDefault()\n\n        var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n        let form_data = new FormData();\n        form_data.append('image', imagedata);\n        form_data.append('email', this.state.user.email);\n        form_data.append('username', this.state.user.username);\n        form_data.append('firstname', this.state.user.firstname);\n        form_data.append('surname', this.state.user.surname);\n        form_data.append('othername', this.state.user.othername);\n        form_data.append('department', this.state.user.department);\n        form_data.append('password', this.state.user.password);\n        form_data.append('gender', this.state.user.gender);\n        form_data.append('image', imagedata);\n           \n        let url = 'https://testingmyapis.herokuapp.com/api/save-user/';\n        axios.post(url, form_data, {\n            headers: {\n            'content-type': 'multipart/form-data',\n            'accept': 'application/json',\n            }\n        })\n        .then(res => {\n            // console.log(res)\n            // console.log(res.data);\n            if (res.data.message === \"saved successfully\"){\n               this.showModal()\n            }\n        })\n        .catch(err => console.log(\"ERROR :\", err))\n    }\n\n    render() {\n        var depts = this.state.dept\n        var self = this\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <h3>Sign Up</h3>\n\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.user.firstname} name=\"firstname\" className=\"form-control\" placeholder=\"First name\" required />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Surname</label>\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.user.surname} name=\"surname\" className=\"form-control\" placeholder=\"surname\" required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Othernames</label>\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.user.othername} name=\"othername\" className=\"form-control\" placeholder=\"Othername\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.user.username} name=\"username\" className=\"form-control\" placeholder=\"username\" required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" onChange={this.handleChange} value={this.state.user.email} name=\"email\" className=\"form-control\" placeholder=\"Enter email\" required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Gender</label>\n                    <select className=\"form-control\" onChange={this.handleChange} value={this.state.user.gender} name=\"gender\">\n                        <option > --Select gender--</option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                        <option value=\"other\">Other</option>\n                    </select>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Department</label>\n                    <select className=\"form-control deptSelect\" onChange={this.handleChange} value={this.state.user.department} name=\"department\" required >\n                        <option> --Select department-- </option>\n                        {depts.map(function(dept, index){\n                            return(\n                                <option key={dept.dept_id} value={dept.dept_id}>{dept.dept_name}</option>\n                            )\n                        })}\n                    </select>\n                </div>\n\n                <div className=\"form-group\" >\n                    <label>Upload profile picture</label>\n                    <input type=\"file\" name=\"userimage\" onChange={this.handleFileInput} value={this.state.user.image} className=\"form-control\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" onChange={this.handleChange} value={this.state.user.password} name=\"password\" className=\"form-control\" placeholder=\"Enter password\" required />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                <p className=\"forgot-password text-right\">\n                    Already registered <Link to={\"/sign-in\"}>sign in?</Link>\n                </p>\n                <Modal show={this.state.show} handleClose={this.hideModal}>\n                    <p>Modal</p>\n                    <Link to={\"/sign-in\"}>Ok</Link>\n                </Modal>\n                {/* <button type=\"button\" onClick={this.showModal}>open</button> */}\n            </form>\n        )\n    }\n}\n","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Profile.js",["78"],"import React from 'react';\n\nexport default class Profile extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            show:false,\n            currentuser: [],\n            longindetails: {}\n        }\n\n        this.getCurentUser = this.getCurentUser.bind(this)\n    }\n\n    componentDidMount() {\n        this.getCurentUser()\n    }\n\n    // componentDidUpdate(){\n    //     this.getCurentUser()\n    // }\n\n    showModal = () => {\n        this.setState({\n            ...this.state.show,\n            show: true\n        })\n    }\n\n    hideModal = () => {\n        this.setState({\n            ...this.state.show,\n            show: false\n        })\n    }\n\n    getCurentUser(){\n        fetch('http://127.0.0.1:8000/api/active/user/',{ \n            method : 'GET',\n            mode : 'cors',\n            cache : 'no-cache',\n            credentials : 'omit',\n            headers: {\n                // 'Content-Type' : 'application/x-www-form-urlencoded'\n                'Content-Type': 'application/json',\n                'accept': 'application/json',  \n                'Authorization': 'JWT ' + localStorage.getItem('access_token')             \n            }, \n            // body: JSON.stringify(this.state)\n        })\n        .then(response => response.json())\n        .then(data => {\n            // console.log('Data :', data)\n            if(data.code === \"token_not_valid\"){\n                this.showModal()\n            }   else {\n                // console.log('gfhk')\n                this.setState({\n                    ...this.state.currentuser,\n                    currentuser:[data]\n                });\n                // this.state.currentuser.append(data)\n                // console.log(\"user :\", this.state.currentuser)\n                // console.log('id', this.state.currentuser)\n            }\n        })\n        .catch((error) => {\n            // console.log(error)\n        })\n    }\n\n    \n    render(){\n        var user = this.state.currentuser\n        var self = this        \n        return(\n            <div>\n                {/* <h2 style={{textAlign:'center'}}>User Profile</h2>\n                <div className=\"card\">\n\n                    <img src=\"\" alt=\"img\" style={{width:'100%'}}/>\n                    <h1>{user.id} </h1>\n                    <p className=\"title\">Student</p>\n                    <p>School</p>\n                    <div>\n                        \n                    </div>\n                </div> */}\n                {user.map(function(user, index){\n                    return(\n                        <div key={index}>\n                        <h2 style={{textAlign:'center'}}>User Profile</h2>\n                        <div className=\"card\">\n\n                            <img src={user.userimage} alt=\"img\" style={{width:'100%'}}/>\n                            <h1>{user.name} </h1>\n                            <p className=\"\">{user.email}</p>\n                            <p>{user.department}</p>\n                            <p>{user.faculty}</p>\n                            <p>{user.gender}</p>\n                            <p>{user.username}</p>\n                            <p>Developer</p>\n                            {/* <p>{user.userimage}</p> */}\n                            <div>\n                               <a href=\"/sign-in\">Logout</a> \n                            </div>\n                        </div>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n        \n    }\n}\n","/home/sammy/projects/jwtenv/howprofile/rerm/src/components/Modal.js",["79"],"// import './modal.css';\nimport { Link } from 'react-router-dom';\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName= show ? \"modal display-block\":\"modal display-none\";\n\n    return (\n        <div className={showHideClassName}>\n            <section className=\"modal-main\">\n                {children}\n                {/* <button type=\"button\" onClick={handleClose}>\n                    Close\n                </button> */}\n                {/* <Link to={\"/sign-in\"}>Ok</Link> */}\n            </section>\n        </div>\n    )\n}\n\nexport default Modal","/home/sammy/projects/jwtenv/howprofile/rerm/src/Mainapp.js",["80"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Modal from './components/Modal';\nimport Profile from './components/Profile';\n// import './index.css'\n\nexport default class Mainapp extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            show:false,\n            currentuser: [],\n            longindetails: {username: \"\", password: \"\"},\n        }\n\n        this.getCurentUser = this.getCurentUser.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.refreshToken = this.refreshToken.bind(this)\n        this.after5minutes = this.after5minutes.bind(this)\n        // this.handlesignout = this.handlesignout.bind(this)\n    }\n\n    componentDidMount() {\n        this.getCurentUser()\n    }\n\n    showModal = () => {\n        this.setState({\n            ...this.state.show,\n            show: true\n        })\n    }\n\n    hideModal = () => {\n        this.setState({\n            ...this.state.show,\n            show: false\n        })\n    }\n\n    after5minutes(){\n        setInterval( function(){console.log('after')},5000)\n    }\n\n    refreshToken(){\n        fetch('https://testingmyapis.herokuapp.com/api/token/refresh/',{ \n            method : 'POST',\n            mode : 'cors',\n            cache : 'no-cache',\n            credentials : 'omit',\n            headers: {\n                // 'Content-Type' : 'application/x-www-form-urlencoded'\n                'Content-Type': 'application/json',\n                'accept': 'application/json',              \n            }, \n            body: JSON.stringify({'refresh': localStorage.getItem('refresh_token')})\n        })\n        .then(response => response.json())\n        .then(data => {\n            // console.log('Data :', data)\n            \n            if (data.access){\n                localStorage.setItem('access_token', data.access)\n                localStorage.setItem('refresh_token', data.refresh)\n                this.showSuccess()\n                this.getCurentUser()\n            }\n            else if(data.detail){\n                // 'No active account found with the given credentials'\n                // console.log('not valid')\n                localStorage.setItem('access_token', '')\n                localStorage.setItem('refresh_token', '')\n                this.showModal()\n            } \n        })\n        .catch((error) => {\n            // console.log(error)\n        })\n    }\n\n    getCurentUser(){\n        fetch('https://testingmyapis.herokuapp.com/api/active/user/',{ \n            method : 'GET',\n            mode : 'cors',\n            cache : 'no-cache',\n            credentials : 'omit',\n            headers: {\n                // 'Content-Type' : 'application/x-www-form-urlencoded'\n                'Content-Type': 'application/json',\n                'accept': 'application/json',  \n                'Authorization': 'JWT ' + localStorage.getItem('access_token')             \n            }, \n            // body: JSON.stringify(this.state)\n        })\n        .then(response => response.json())\n        .then(data => {\n            // console.log('Data :', data)\n            if(data.code === \"token_not_valid\"){\n                this.showModal()\n                    // this.refreshToken()\n            }   else {\n                // console.log('gfhk')\n                this.setState({\n                    currentuser:data\n                });\n                // this.state.currentuser.append(data)\n                // console.log(\"user :\",this.state.currentuser)\n            }\n        })\n        .catch((error) => {\n            // console.log(error)\n        })\n    }\n\n    handleChange(event) {\n        this.setState({\n            longindetails:{\n                ...this.state.longindetails,\n                [event.target.name]: event.target.value}\n        });\n        // console.log(this.state.longindetails)\n    }\n\n    handleSubmit(event) {\n        // alert('A username and password was submitted: ' + this.state.username + \" \" + this.state.password);\n        event.preventDefault();\n        fetch('https://testingmyapis.herokuapp.com/api/token/obtain/', {\n            method : 'POST',\n            mode : 'cors',\n            cache : 'no-cache',\n            credentials : 'omit',\n            headers: {\n                // 'Content-Type' : 'application/x-www-form-urlencoded'\n                'Content-Type': 'application/json',\n                'accept': 'application/json',           \n            }, \n            body: JSON.stringify(this.state.longindetails)\n        })\n        .then(response => response.json())\n        .then(data => {\n            // console.log('Data :', data)\n            \n            if (data.access){\n                localStorage.setItem('access_token', data.access)\n                localStorage.setItem('refresh_token', data.refresh)\n                this.hideModal()\n                this.getCurentUser()\n                window.location.reload()\n            }\n            else if(data.detail){\n                // 'No active account found with the given credentials'\n                // console.log('not valid')\n                localStorage.setItem('access_token', '')\n                localStorage.setItem('refresh_token', '')\n                this.showModal()\n            } \n        })\n        .catch((error) => {\n            // console.log(error)\n        })\n    }\n\n    handlesignout(){\n        // e.preventDefault()\n        fetch('https://testingmyapis.herokuapp.com/api/user/logout/', {\n            method : 'POST',\n            mode : 'cors',\n            cache : 'no-cache',\n            credentials : 'omit',\n            headers: {\n                // 'Content-Type' : 'application/x-www-form-urlencoded'\n                'Content-Type': 'application/json',\n                'accept': 'application/json',\n                'Authorization': 'JWT ' + localStorage.getItem('access_token'),       \n            }, \n            body: JSON.stringify({'refresh':localStorage.getItem('refresh_token')})\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log('Data :', data) \n            localStorage.setItem('access_token', '')\n            localStorage.setItem('refresh_token', '')\n        })\n        \n\n    }\n\n    render() {\n    return (<Router>\n      <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to={\"/sign-in\"}>positronX.io</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  {/* <Link className=\"nav-link\" to={} onClick={this.hahandlesignout}>Logout</Link> */}\n                </li>\n                <li className=\"nav-item\">\n                  {/* <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link> */}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n        <div>\n            <Modal show={this.state.show} handleClose={this.hideModal}>\n                   \n                Session closed\n\n                <form onSubmit={this.handleSubmit}>\n                    <h3>Sign In</h3>\n\n                    <div className=\"form-group\">\n                        <label>Username</label>\n                        <input type=\"text\" name=\"username\" value={this.state.longindetails.username} onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter username\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" name=\"password\" value={this.state.longindetails.password} onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter password\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"custom-control custom-checkbox\">\n                            {/* <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" /> */}\n                            {/* <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label> */}\n                            <br />\n                        </div>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                    <p className=\"forgot-password text-right\">\n                        Forgot <a href=\"#\">password?</a>\n                    </p>\n                    <p className=\"create-account text-right\">\n                        Click to <Link to={\"/sign-up\"}>Create an Account</Link>\n                    </p>\n                </form>\n                    <br />\n                    {/* <Link to={\"/sign-in\"}>Login</Link> */}\n            </Modal>\n            <div className=\"auth-wrapper\">\n                <div className=\"auth-inner\"> \n                    \n                <Switch>\n                    <Route exact path='/dash' component={Profile} />\n                    <Route path=\"/profile\" component={Profile} />\n                </Switch>\n                </div>\n            </div>\n        </div>\n      </Router>\n    );\n  }\n}","/home/sammy/projects/jwtenv/howprofile/rerm/src/Accounts.js",[],"/home/sammy/projects/jwtenv/howprofile/rerm/src/components/SuccessModal.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":5,"column":50,"nodeType":"87","messageId":"88","endLine":5,"endColumn":54},{"ruleId":"89","severity":1,"message":"90","line":140,"column":28,"nodeType":"91","endLine":140,"endColumn":40},{"ruleId":"85","severity":1,"message":"92","line":53,"column":15,"nodeType":"87","messageId":"88","endLine":53,"endColumn":21},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","severity":1,"message":"95","line":35,"column":13,"nodeType":"87","messageId":"88","endLine":35,"endColumn":22},{"ruleId":"85","severity":1,"message":"96","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":20},{"ruleId":"85","severity":1,"message":"97","line":57,"column":13,"nodeType":"87","messageId":"88","endLine":57,"endColumn":17},{"ruleId":"85","severity":1,"message":"98","line":123,"column":13,"nodeType":"87","messageId":"88","endLine":123,"endColumn":17},{"ruleId":"85","severity":1,"message":"98","line":75,"column":13,"nodeType":"87","messageId":"88","endLine":75,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":236,"column":32,"nodeType":"91","endLine":236,"endColumn":44},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'target' is assigned a value but never used.",["99"],["100"],"'imagedata' is assigned a value but never used.","'useHistory' is defined but never used.","'dept' is assigned a value but never used.","'self' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]